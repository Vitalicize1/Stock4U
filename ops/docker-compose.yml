version: '3.8'

services:
  # Main application
  stock4u-api:
    build:
      context: ..
      dockerfile: ops/docker/Dockerfile
    container_name: stock4u-api
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://stock4u_user:${POSTGRES_PASSWORD}@postgres:5432/stock4u
      - REDIS_URL=redis://redis:6379/0
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - API_KEY=${API_KEY}
    volumes:
      - ../logs:/app/logs
      - ../cache:/app/cache
    networks:
      - stock4u-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
      - /var/tmp

  # Database
  postgres:
    image: postgres:15-alpine
    container_name: stock4u-postgres
    environment:
      POSTGRES_DB: stock4u
      POSTGRES_USER: stock4u_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "127.0.0.1:5432:5432"  # Bind to localhost only
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../init-scripts:/docker-entrypoint-initdb.d
    networks:
      - stock4u-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U stock4u_user -d stock4u"]
      interval: 30s
      timeout: 10s
      retries: 3
    security_opt:
      - no-new-privileges:true
    read_only: false

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: stock4u-redis
    ports:
      - "127.0.0.1:6379:6379"  # Bind to localhost only
    volumes:
      - redis_data:/data
    networks:
      - stock4u-network
    restart: unless-stopped
    command: >
      redis-server 
      --appendonly yes 
      --maxmemory 256mb 
      --maxmemory-policy allkeys-lru
      --requirepass ${REDIS_PASSWORD}
      --bind 0.0.0.0
      --protected-mode yes
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    security_opt:
      - no-new-privileges:true
    read_only: false

  # Reverse Proxy with SSL
  nginx:
    image: nginx:alpine
    container_name: stock4u-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./security/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./security/ssl:/etc/nginx/ssl:ro
      - ../logs/nginx:/var/log/nginx
    networks:
      - stock4u-network
    restart: unless-stopped
    depends_on:
      - stock4u-api
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /var/cache/nginx
      - /var/run

  # Database Admin (Development only)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: stock4u-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@stock4u.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin_password}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "127.0.0.1:8080:80"  # Bind to localhost only
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - stock4u-network
    restart: unless-stopped
    depends_on:
      - postgres
    security_opt:
      - no-new-privileges:true
    profiles:
      - dev  # Only start in development

  # Redis Admin (Development only)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: stock4u-redis-commander
    environment:
      REDIS_HOSTS: local:redis:6379:${REDIS_PASSWORD}
    ports:
      - "127.0.0.1:8081:8081"  # Bind to localhost only
    networks:
      - stock4u-network
    restart: unless-stopped
    depends_on:
      - redis
    security_opt:
      - no-new-privileges:true
    profiles:
      - dev  # Only start in development

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  stock4u-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16


